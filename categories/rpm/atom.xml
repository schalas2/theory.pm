<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rpm | theory.pm]]></title>
  <link href="http://theory.pm/categories/rpm/atom.xml" rel="self"/>
  <link href="http://theory.pm/"/>
  <updated>2016-02-29T11:53:56-08:00</updated>
  <id>http://theory.pm/</id>
  <author>
    <name><![CDATA[David E. Wheeler]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
    <entry>
      




<title type="html"><![CDATA[Build Modern Perl RPMs with rpmcpan]]></title>
<link href="http://theory.pm/rpm/2014/09/21/build-modern-perl-rpms-with-rpmcpan/"/>
<updated>2014-09-21T14:45:00-07:00</updated>
<id>http://theory.pm/rpm/2014/09/21/build-modern-perl-rpms-with-rpmcpan</id>

      <content type="html"><![CDATA[<p><img class="center" src="/images/ioperllove.png" width="640" title="&lsquo;iovation + Perl = Love&rsquo; &lsquo;iovation + Perl = Love&rsquo;" ></p>

<p>We&rsquo;ve been using the CentOS Perl RPMs at <a href="http://iovation.com/">iovation</a> to run all of our Perl
applications. This has been somewhat painful, because the version of Perl,
5.10.1, is quite old &mdash; it shipped in August 2009. In fact, it consists
mostly of bug fixes against Perl 5.10.0, which shipped in December 2007! Many
of the modules provided by CentOS core and <a href="https://fedoraproject.org/wiki/EPEL" title="Extra Packages for Enterprise Linux">EPEL</a> are quite old, as well, and
we had built up quite the collection of customized module RPMs managed by a
massive spaghetti-coded Jenkins job. When we recently ran into a Unicode
issue that would best have been addressed by running a more modern Perl &mdash;
rather than a <a href="http://grokbase.com/t/perl/perl5-porters/147gfvrd2n/encode-vs-json#20140723oncbjv4rddo66735xess5wo77a" title="“Encode vs. JSON” on Perl 5 Porters">hinky workaround</a> &mdash; I finally sat down and knocked out a way
to get a solid set of Modern Perl and related CPAN RPMs.</p>

<p>I gave it the rather boring name <code>rpmcpan</code>, and now <a href="https://github.com/iovation/rpmcpan" title="rpmcpan on GitHub">you can use it, too</a>.
Turns out, <a href="http://twitter.com/aaronblew" title="Aaron Blew: SRE Manager (dun dun duuuuun!)">DevOps</a> doesn&rsquo;t myopically insist on using core RPMs in the name
of some abstract idea about stability. Rather, we just need a way to easily
deploy our stuff as RPMs. If the same applies to your organization, you can
get Modern Perl RPMs, too.</p>

<p>Here&rsquo;s how we do it. We have a new Jenkins job that runs both nightly and
whenever the <a href="https://github.com/iovation/rpmcpan" title="rpmcpan on GitHub"><code>rpmcpan</code> Git repository</a> updates. It uses the <a href="https://metacpan.org/">MetaCPAN</a> API
to build the latest versions of everything we need. Here&rsquo;s how to get it to
build the latest version of Perl, 5.20.1:</p>

<pre><code>./bin/rpmcpan --version 5.20.1
</code></pre>

<p>That will get you a nice, modern Perl RPM, named <code>perl520</code>, completely encapsulated in <code>/usr/local/perl520</code>. Want 5.18 instead: Just change the version:</p>

<pre><code>./bin/rpmcpan --version 5.18.2
</code></pre>

<p>That will give you <code>perl518</code>. But that&rsquo;s not all. You want to build CPAN
distributions against that version. Easy. Just edit the <a href="https://github.com/iovation/rpmcpan/blob/master/etc/dists.json"><code>dists.json</code> file</a>.
Its contents are a JSON object where the keys name CPAN distributions (not
modules), and the values are objects that customize our RPMs get built. Most
of the time, the objects can be empty:</p>

<pre><code>"Try-Tiny": {},
</code></pre>

<p>This results in an RPM named <code>perl520-Try-Tiny</code> (or <code>perl518-Try-Tiny</code>,
etc.). Sometimes you might need additional information to customize the CPAN
spec file generated to build the distribution. For example, since this is
Linux, we need to exclude a Win32 dependency in the <a href="http://search.cpan.org/dist/Encode-Locale" title="Encode-Locale on CPAN">Encode-Locale</a>
distribution:</p>

<pre><code>"Encode-Locale": { "exclude_requires": ["Win32::Console"] },
</code></pre>

<p>Other distributions might require additional RPMs or environment variables,
like <a href="http://search.cpan/org/dist/DBD-Pg/" title="DBD-Pg on CPAN">DBD-Pg</a>, which requires the <a href="http://yum.postgresql.org" title="PostgreSQL Yum Repository">PostgreSQL RPMs</a>:</p>

<pre><code>"DBD-Pg": {
    "build_requires": ["postgresql93-devel", "postgresql93"],
    "environment": { "POSTGRES_HOME": "/usr/pgsql-9.3" }
},
</code></pre>

<p>See the <a href="https://github.com/iovation/rpmcpan/blob/master/README.md" title="`rpmcpan README`">README</a> for a complete list of customization options. Or just get
started with our <a href="https://github.com/iovation/rpmcpan/blob/master/etc/dists.json"><code>dists.json</code> file</a>, which so far builds the bare minimum we
need for one of our Perl apps. Add new distributions? Send a <a href="https://github.com/iovation/rpmcpan/pulls">pull request</a>!
We&rsquo;ll be doing so as we integrate more of our Perl apps with a Modern Perl
and leave the sad RPM past behind.</p>
]]></content>
    </entry>
  
</feed>

